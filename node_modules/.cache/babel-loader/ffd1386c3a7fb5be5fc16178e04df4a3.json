{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documentos\\\\UCAB\\\\Semestre 7\\\\Programas Web\\\\01-starting-projects10\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const ctx = useContext(AuthContext);\n  /*const [isLoggedIn, setIsLoggedIn] = useState(false);\n  \n   useEffect(()=>{\n    const storeUserInfo=localStorage.getItem('isLoggedIn');\n    if(storeUserInfo==='1'){\n      setIsLoggedIn(true);\n    }\n  },[]);\n   const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n   \n    localStorage.setItem('isLoggedIn','1');\n    setIsLoggedIn(true);\n  };\n   const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Login","Home","MainHeader","AuthContext","App","ctx","isLoggedIn"],"sources":["C:/Users/victo/OneDrive/Documentos/UCAB/Semestre 7/Programas Web/01-starting-projects10/src/App.js"],"sourcesContent":["import React, { useState, useEffect,useContext } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './context/auth-context';\n\nfunction App() {\n  const ctx=useContext(AuthContext);\n  /*const [isLoggedIn, setIsLoggedIn] = useState(false);\n  \n\n  useEffect(()=>{\n    const storeUserInfo=localStorage.getItem('isLoggedIn');\n    if(storeUserInfo==='1'){\n      setIsLoggedIn(true);\n    }\n  },[]);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n   \n    localStorage.setItem('isLoggedIn','1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };*/\n\n  return (\n  \n      <React.Fragment>\n\n      \n      <MainHeader/>\n      <main>\n        {!ctx.isLoggedIn && <Login  />}\n        {ctx.isLoggedIn && <Home  />}\n      </main>\n     </React.Fragment>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAACC,UAAU,QAAQ,OAAO;AAE7D,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,wBAAwB;AAAC;AAEjD,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,GAAG,GAACN,UAAU,CAACI,WAAW,CAAC;EACjC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKE,oBAEI,QAAC,KAAK,CAAC,QAAQ;IAAA,wBAGf,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACb;MAAA,WACG,CAACE,GAAG,CAACC,UAAU,iBAAI,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAI,EAC7BD,GAAG,CAACC,UAAU,iBAAI,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACS;AAGtB;AAAC,GAtCQF,GAAG;AAAA,KAAHA,GAAG;AAwCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}